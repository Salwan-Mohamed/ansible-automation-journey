name: Ansible CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Ansible Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: Run yamllint
        run: |
          if [ -d "playbooks" ] || [ -d "roles" ]; then
            yamllint -f parsable .
          else
            echo "No playbooks or roles found, skipping yamllint"
          fi
        continue-on-error: true

      - name: Run ansible-lint
        run: |
          if [ -d "playbooks" ] || [ -d "roles" ]; then
            ansible-lint playbooks/ roles/ || true
          else
            echo "No playbooks or roles found, skipping ansible-lint"
          fi
        continue-on-error: true

  syntax-check:
    name: Syntax Validation
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          pip install --upgrade pip
          pip install ansible

      - name: Syntax check playbooks
        run: |
          if [ -d "playbooks" ] && [ "$(ls -A playbooks/*.yml 2>/dev/null)" ]; then
            for playbook in playbooks/*.yml; do
              echo "Checking syntax for $playbook"
              ansible-playbook "$playbook" --syntax-check || exit 1
            done
          else
            echo "No playbooks found, skipping syntax check"
          fi

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true

      - name: Check for secrets
        run: |
          echo "Scanning for potential secrets..."
          if grep -r -i "password\|secret\|api[_-]key" --include="*.yml" --include="*.yaml" . | grep -v "ansible.builtin.vault" | grep -v ".github" | grep -v "example"; then
            echo "⚠️  Warning: Found potential unencrypted secrets"
            exit 1
          else
            echo "✅ No unencrypted secrets found"
          fi
        continue-on-error: true

  documentation-check:
    name: Documentation Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check README exists
        run: |
          if [ ! -f "README.md" ]; then
            echo "❌ README.md is missing"
            exit 1
          fi
          echo "✅ README.md exists"

      - name: Check CONTRIBUTING exists
        run: |
          if [ ! -f "CONTRIBUTING.md" ]; then
            echo "⚠️  CONTRIBUTING.md is missing"
          else
            echo "✅ CONTRIBUTING.md exists"
          fi

      - name: Check for role documentation
        run: |
          if [ -d "roles" ]; then
            for role in roles/*/; do
              if [ ! -f "${role}README.md" ]; then
                echo "⚠️  ${role} is missing README.md"
              fi
            done
          fi

  test-examples:
    name: Test Example Scripts
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          if [ -d "examples" ]; then
            find examples -name "*.sh" -exec chmod +x {} \;
            echo "✅ Made example scripts executable"
          else
            echo "No examples directory found"
          fi

      - name: Check script syntax
        run: |
          if [ -d "examples" ]; then
            for script in $(find examples -name "*.sh"); do
              bash -n "$script" && echo "✅ $script syntax OK" || exit 1
            done
          fi
        continue-on-error: true

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [lint, syntax-check, security-scan, documentation-check, test-examples]
    if: always()
    
    steps:
      - name: Generate summary
        run: |
          echo "## 🎉 Ansible CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Syntax Check | ${{ needs.syntax-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Documentation | ${{ needs.documentation-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Examples | ${{ needs.test-examples.result }} |" >> $GITHUB_STEP_SUMMARY
